{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mxmgn\\\\WebstormProjects\\\\countries-flags\\\\src\\\\pages\\\\HomePage.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { ALL_COUNTRIES } from '../config';\nimport { List } from '../Components/List';\nimport { Card } from '../Components/Card';\nimport { Controls } from '../Components/Controls';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = _ref => {\n  _s();\n\n  let {\n    countries,\n    setCountries\n  } = _ref;\n  const [filteredCountries, setFilteredCountries] = useState(countries);\n\n  const handleSearch = (search, region) => {\n    let data = [...countries];\n\n    if (region) {\n      data = data.filter(c => c.region.includes(region));\n    }\n\n    if (search) {\n      data = data.filter(c => c.name.toLowerCase().includes(search.toLowerCase()));\n    }\n\n    setFilteredCountries(data);\n  };\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!countries.length) {\n      axios.get(ALL_COUNTRIES).then(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        return setCountries(data);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    handleSearch();\n  }, [countries]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: filteredCountries.map(c => {\n        const countryInfo = {\n          img: c.flags.svg,\n          name: c.name,\n          info: [{\n            title: 'Population',\n            description: c.population.toLocaleString()\n          }, {\n            title: 'Region',\n            description: c.region\n          }, {\n            title: 'Capital',\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, { ...countryInfo,\n          onClick: () => navigate(`/country/${c.name}`)\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"xNZIocJosvvpsU7Mu7HGhccCi80=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["axios","useEffect","useState","ALL_COUNTRIES","List","Card","Controls","useNavigate","HomePage","countries","setCountries","filteredCountries","setFilteredCountries","handleSearch","search","region","data","filter","c","includes","name","toLowerCase","navigate","length","get","then","map","countryInfo","img","flags","svg","info","title","description","population","toLocaleString","capital"],"sources":["C:/Users/mxmgn/WebstormProjects/countries-flags/src/pages/HomePage.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { ALL_COUNTRIES } from '../config';\r\nimport { List } from '../Components/List';\r\nimport { Card } from '../Components/Card';\r\nimport { Controls } from '../Components/Controls';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const HomePage = ({ countries, setCountries }) => {\r\n  const [filteredCountries, setFilteredCountries] = useState(countries);\r\n\r\n  const handleSearch = (search, region) => {\r\n    let data = [...countries];\r\n    if (region) {\r\n      data = data.filter((c) => c.region.includes(region));\r\n    }\r\n    if (search) {\r\n      data = data.filter((c) => c.name.toLowerCase().includes(search.toLowerCase()));\r\n    }\r\n    setFilteredCountries(data);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!countries.length) {\r\n      axios.get(ALL_COUNTRIES).then(({ data }) => setCountries(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [countries]);\r\n  return (\r\n    <>\r\n      <Controls onSearch={handleSearch} />\r\n      <List>\r\n        {filteredCountries.map((c) => {\r\n          const countryInfo = {\r\n            img: c.flags.svg,\r\n            name: c.name,\r\n            info: [\r\n              {\r\n                title: 'Population',\r\n                description: c.population.toLocaleString(),\r\n              },\r\n              {\r\n                title: 'Region',\r\n                description: c.region,\r\n              },\r\n              {\r\n                title: 'Capital',\r\n                description: c.capital,\r\n              },\r\n            ],\r\n          };\r\n          return (\r\n            <Card key={c.name} {...countryInfo} onClick={() => navigate(`/country/${c.name}`)} />\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC,SAAF;IAAaC;EAAb,CAAgC;EACvD,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAACO,SAAD,CAA1D;;EAEA,MAAMI,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;IACvC,IAAIC,IAAI,GAAG,CAAC,GAAGP,SAAJ,CAAX;;IACA,IAAIM,MAAJ,EAAY;MACVC,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACH,MAAF,CAASI,QAAT,CAAkBJ,MAAlB,CAAnB,CAAP;IACD;;IACD,IAAID,MAAJ,EAAY;MACVE,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACE,IAAF,CAAOC,WAAP,GAAqBF,QAArB,CAA8BL,MAAM,CAACO,WAAP,EAA9B,CAAnB,CAAP;IACD;;IACDT,oBAAoB,CAACI,IAAD,CAApB;EACD,CATD;;EAWA,MAAMM,QAAQ,GAAGf,WAAW,EAA5B;EAEAN,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,SAAS,CAACc,MAAf,EAAuB;MACrBvB,KAAK,CAACwB,GAAN,CAAUrB,aAAV,EAAyBsB,IAAzB,CAA8B;QAAA,IAAC;UAAET;QAAF,CAAD;QAAA,OAAcN,YAAY,CAACM,IAAD,CAA1B;MAAA,CAA9B;IACD;EACF,CAJQ,EAIN,EAJM,CAAT;EAMAf,SAAS,CAAC,MAAM;IACdY,YAAY;EACb,CAFQ,EAEN,CAACJ,SAAD,CAFM,CAAT;EAGA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,QAAQ,EAAEI;IAApB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAA,UACGF,iBAAiB,CAACe,GAAlB,CAAuBR,CAAD,IAAO;QAC5B,MAAMS,WAAW,GAAG;UAClBC,GAAG,EAAEV,CAAC,CAACW,KAAF,CAAQC,GADK;UAElBV,IAAI,EAAEF,CAAC,CAACE,IAFU;UAGlBW,IAAI,EAAE,CACJ;YACEC,KAAK,EAAE,YADT;YAEEC,WAAW,EAAEf,CAAC,CAACgB,UAAF,CAAaC,cAAb;UAFf,CADI,EAKJ;YACEH,KAAK,EAAE,QADT;YAEEC,WAAW,EAAEf,CAAC,CAACH;UAFjB,CALI,EASJ;YACEiB,KAAK,EAAE,SADT;YAEEC,WAAW,EAAEf,CAAC,CAACkB;UAFjB,CATI;QAHY,CAApB;QAkBA,oBACE,QAAC,IAAD,OAAuBT,WAAvB;UAAoC,OAAO,EAAE,MAAML,QAAQ,CAAE,YAAWJ,CAAC,CAACE,IAAK,EAApB;QAA3D,GAAWF,CAAC,CAACE,IAAb;UAAA;UAAA;UAAA;QAAA,QADF;MAGD,CAtBA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AA8BD,CAvDM;;GAAMZ,Q;UAcMD,W;;;KAdNC,Q"},"metadata":{},"sourceType":"module"}